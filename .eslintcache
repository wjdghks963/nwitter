[{"C:\\Users\\User\\Desktop\\nwitter\\src\\index.js":"1","C:\\Users\\User\\Desktop\\nwitter\\src\\components\\App.js":"2","C:\\Users\\User\\Desktop\\nwitter\\src\\myBase.js":"3","C:\\Users\\User\\Desktop\\nwitter\\src\\components\\Router.js":"4","C:\\Users\\User\\Desktop\\nwitter\\src\\components\\Navigation.js":"5","C:\\Users\\User\\Desktop\\nwitter\\src\\routes\\Auth.js":"6","C:\\Users\\User\\Desktop\\nwitter\\src\\routes\\Home.js":"7","C:\\Users\\User\\Desktop\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\User\\Desktop\\nwitter\\src\\components\\Nweet.js":"9"},{"size":211,"mtime":1609660292240,"results":"10","hashOfConfig":"11"},{"size":788,"mtime":1630327932242,"results":"12","hashOfConfig":"11"},{"size":678,"mtime":1630329802086,"results":"13","hashOfConfig":"11"},{"size":962,"mtime":1630158447312,"results":"14","hashOfConfig":"11"},{"size":287,"mtime":1610021279342,"results":"15","hashOfConfig":"11"},{"size":2615,"mtime":1629894400217,"results":"16","hashOfConfig":"11"},{"size":3726,"mtime":1630329640884,"results":"17","hashOfConfig":"11"},{"size":510,"mtime":1630327958565,"results":"18","hashOfConfig":"11"},{"size":1692,"mtime":1630327352136,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4dpuyg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\nwitter\\src\\index.js",[],["40","41"],"C:\\Users\\User\\Desktop\\nwitter\\src\\components\\App.js",[],"C:\\Users\\User\\Desktop\\nwitter\\src\\myBase.js",[],"C:\\Users\\User\\Desktop\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\User\\Desktop\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\User\\Desktop\\nwitter\\src\\routes\\Auth.js",["42"],"import { authService, firebaseInstance } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    // event 내 tartget 에서 name, value값을 가져 옴\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSumbit = async (event) => {\r\n    event.preventDefault(); // 웹 초기화 방지\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // newAccount = true 일때 firebase의 authService를 통해 이메일과 패스워드로 유저를 새롭게 만든다\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // flase 일때 로그인을 하게 만든다.\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSumbit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\User\\Desktop\\nwitter\\src\\routes\\Home.js",["43"],"C:\\Users\\User\\Desktop\\nwitter\\src\\routes\\Profile.js",[],"C:\\Users\\User\\Desktop\\nwitter\\src\\components\\Nweet.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":35,"column":9,"nodeType":"50","messageId":"51","endLine":35,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":83,"column":13,"nodeType":"54","endLine":83,"endColumn":64},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]